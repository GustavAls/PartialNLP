#!/bin/sh
### General options
### â€“- specify queue --
### CHANGE HERE FOR GPU/CPU
##BSUB -q gpuv100
### -- set the job Name --
#BSUB -J laplace_yacht
### -- ask for number of cores (default: 1) --
#BSUB -n 2
#BSUB -R "span[block=2]"
### -- Select the resources: 1 gpu in exclusive process mode --
### CHANGE HERE FOR GPU/CPU
##BSUB -gpu "num=1:mode=exclusive_process"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 12:00
# request 10GB of system-memory
#BSUB -R "rusage[mem=10GB]"
### -- set the email address --
# please uncomment the following line and put in your e-mail address,
# if you want to receive e-mail notifications on a non-default address
##BSUB -u your_email_address
### -- send notification at start --
##BSUB -B
### -- send notification at completion--
##BSUB -N
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o out/gpu_%J.out
#BSUB -e out/gpu_%J.err
# -- end of LSF options --

# Activate the python eviorment
module load python3/3.9.11
source ~/PartialNLP/partial_venv/bin/activate
# Set python path
export PYTHONPATH=$PYTHONPATH:~/PartialNLP/ 
#xport PYTHONPATH=$PYTHONPATH:~/

# Load the cuda module
module load cuda/11.6
/appl/cuda/11.6.0/samples/bin/x86_64/linux/release/deviceQuery

echo "Running script..."
# Send sample job to GPU

##### ADD INFO HERE ####
model_name="yacht"

# Create some folders
dir_outpath="results/UCI_Laplace/${model_name}_models"
dir_datapath="results/UCI_Laplace/${model_name}_data"

# Make the directories if they don't exist
mkdir -p $dir_outpath
mkdir -p $dir_datapath

# Run the training
python3 Laplace/uci_laplace.py \
    --output_path $dir_outpath \
    --data_path $dir_datapath \
    --dataset $model_name \
    --num_epochs 20000 \
    --num_runs 15 \
    --device "cpu" \

if [ $? -eq 0 ]; then
    echo "Success"
    exit 0
else
    echo "Error"
    exit 1
fi