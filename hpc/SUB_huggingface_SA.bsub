#!/bin/sh
### General options
### â€“- specify queue --
#BSUB -q gpuv100
### -- set the job Name --
#BSUB -J SentimentClassifier
### -- ask for number of cores (default: 1) --
#BSUB -n 8
#BSUB -R "span[block=2]"
### -- Select the resources: 1 gpu in exclusive process mode --
#BSUB -gpu "num=1:mode=exclusive_process"
### -- set walltime limit: hh:mm --  maximum 24 hours for GPU-queues right now
#BSUB -W 24:00
# request 10GB of system-memory
#BSUB -R "rusage[mem=10GB]"
### -- set the email address --
# please uncomment the following line and put in your e-mail address,
# if you want to receive e-mail notifications on a non-default address
##BSUB -u your_email_address
### -- send notification at start --
##BSUB -B
### -- send notification at completion--
#BSUB -N
### -- Specify the output and error file. %J is the job-id --
### -- -o and -e mean append, -oo and -eo mean overwrite --
#BSUB -o out/gpu_%J.out
#BSUB -e out/gpu_%J.err
# -- end of LSF options --

# Activate the python eviorment
module load python3/3.9.11
source ~/PartialNLP/partial_venv/bin/activate
# Set python path
export PYTHONPATH=$PYTHONPATH:~/PartialNLP/

nvidia-smi
# Load the cuda module
module load cuda/11.7
/appl/cuda/11.7.0/samples/bin/x86_64/linux/release/deviceQuery

echo "Running script..."
# Send sample job to GPU

##### ADD INFO HERE ####
model_name="SentimentAnalysis"

# Create some folders
dir_outpath="out/${model_name}"

# Make the directories if they don't exist
mkdir -p $dir_outpath

# Run the training
python3 SentimentAnalysis/SentimentClassifier.py \
    --output_path $dir_outpath \
    --train_batch_size 100 \
    --eval_batch_size 100 \
    --num_epochs 50 \
    --dataset_name "imdb" \
    --train True \
    --device_batch_size 12 \
    --train_size 10000 \
    --test_size 1000 \


if [ $? -eq 0 ]; then
    echo "Success"
    exit 0
else
    echo "Error"
    exit 1
fi